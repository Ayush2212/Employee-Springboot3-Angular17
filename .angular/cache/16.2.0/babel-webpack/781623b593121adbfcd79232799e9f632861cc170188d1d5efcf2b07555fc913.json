{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.api = \"http://localhost:8085\";\n  }\n  saveEmployee(employee) {\n    return this.httpClient.post(`${this.api}/com/save/employee`, employee);\n  }\n  getEmployees() {\n    return this.httpClient.get(`${this.api}/com/get/employee`);\n  }\n  searchEmployees(searchQuery) {\n    return this.httpClient.get(`${this.api}/employees?search=${searchQuery}`);\n  }\n  deleteEmployee(employeeId) {\n    return this.httpClient.delete(`${this.api}/com/delete/employee/${employeeId}`);\n  }\n  getEmployee(employeeId) {\n    return this.httpClient.get(`${this.api}/com/get/employee/${employeeId}`);\n  }\n  updateEmployee(employee) {\n    return this.httpClient.put(`${this.api}/com/update/employee`, employee);\n  }\n  getEmployeeReview(employeeId) {\n    return this.httpClient.get(`${this.api}/api/review/employeeReview/${employeeId}`);\n  }\n  getEmployeeReviewsByDate(employeeId, startDate, endDate) {\n    const url = `${this.api}/api/review/employeeReviewByDate/${employeeId}`;\n    const params = {\n      startDate: startDate.toISOString(),\n      endDate: endDate.toISOString()\n    };\n    return this.httpClient.get(url, {\n      params\n    });\n  }\n}\n_class = EmployeeService;\n_class.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EmployeeService","constructor","httpClient","api","saveEmployee","employee","post","getEmployees","get","searchEmployees","searchQuery","deleteEmployee","employeeId","delete","getEmployee","updateEmployee","put","getEmployeeReview","getEmployeeReviewsByDate","startDate","endDate","url","params","toISOString","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/ayush.dwivedee/SpringbootAngular/crud-angular-ui/src/app/employee.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Employee } from './employee.model';\nimport { Observable } from 'rxjs';\nimport { Review } from './review.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  api = \"http://localhost:8085\"\n\n  public saveEmployee(employee: Employee): Observable<Employee> {\n    return this.httpClient.post<Employee>(`${this.api}/com/save/employee`, employee);\n  }\n\n  public getEmployees(): Observable<Employee[]> {\n      return this.httpClient.get<Employee[]>(`${this.api}/com/get/employee`);\n  }\n  searchEmployees(searchQuery: string): Observable<Employee[]> {\n    return this.httpClient.get<Employee[]>(`${this.api}/employees?search=${searchQuery}`);\n  }\n  public deleteEmployee(employeeId: number) {\n    return this.httpClient.delete(`${this.api}/com/delete/employee/${employeeId}`);\n  }\n\n  public getEmployee(employeeId: number) {\n    return this.httpClient.get<Employee>(`${this.api}/com/get/employee/${employeeId}`);\n  }\n\n  public updateEmployee(employee: Employee) {\n    return this.httpClient.put<Employee>(`${this.api}/com/update/employee`, employee);\n  }\n\n  public getEmployeeReview(employeeId: number): Observable<{ employeeData: Employee, reviews: any[] }> {\n    return this.httpClient.get<{ employeeData: Employee, reviews: any[] }>(`${this.api}/api/review/employeeReview/${employeeId}`);\n\n}\n\ngetEmployeeReviewsByDate(employeeId: number, startDate: Date, endDate: Date): Observable<Review[]> {\n  const url = `${this.api}/api/review/employeeReviewByDate/${employeeId}`;\n  const params = { startDate: startDate.toISOString(), endDate: endDate.toISOString() };\n  return this.httpClient.get<Review[]>(url, { params });\n}\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAE9B,KAAAC,GAAG,GAAG,uBAAuB;EAFiB;EAIvCC,YAAYA,CAACC,QAAkB;IACpC,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAW,GAAG,IAAI,CAACH,GAAG,oBAAoB,EAAEE,QAAQ,CAAC;EAClF;EAEOE,YAAYA,CAAA;IACf,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,GAAG,mBAAmB,CAAC;EAC1E;EACAM,eAAeA,CAACC,WAAmB;IACjC,OAAO,IAAI,CAACR,UAAU,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,GAAG,qBAAqBO,WAAW,EAAE,CAAC;EACvF;EACOC,cAAcA,CAACC,UAAkB;IACtC,OAAO,IAAI,CAACV,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,GAAG,wBAAwBS,UAAU,EAAE,CAAC;EAChF;EAEOE,WAAWA,CAACF,UAAkB;IACnC,OAAO,IAAI,CAACV,UAAU,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,GAAG,qBAAqBS,UAAU,EAAE,CAAC;EACpF;EAEOG,cAAcA,CAACV,QAAkB;IACtC,OAAO,IAAI,CAACH,UAAU,CAACc,GAAG,CAAW,GAAG,IAAI,CAACb,GAAG,sBAAsB,EAAEE,QAAQ,CAAC;EACnF;EAEOY,iBAAiBA,CAACL,UAAkB;IACzC,OAAO,IAAI,CAACV,UAAU,CAACM,GAAG,CAA6C,GAAG,IAAI,CAACL,GAAG,8BAA8BS,UAAU,EAAE,CAAC;EAEjI;EAEAM,wBAAwBA,CAACN,UAAkB,EAAEO,SAAe,EAAEC,OAAa;IACzE,MAAMC,GAAG,GAAG,GAAG,IAAI,CAAClB,GAAG,oCAAoCS,UAAU,EAAE;IACvE,MAAMU,MAAM,GAAG;MAAEH,SAAS,EAAEA,SAAS,CAACI,WAAW,EAAE;MAAEH,OAAO,EAAEA,OAAO,CAACG,WAAW;IAAE,CAAE;IACrF,OAAO,IAAI,CAACrB,UAAU,CAACM,GAAG,CAAWa,GAAG,EAAE;MAAEC;IAAM,CAAE,CAAC;EACvD;;SArCatB,eAAe;;mBAAfA,MAAe,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAf3B,MAAe;EAAA4B,OAAA,EAAf5B,MAAe,CAAA6B,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}