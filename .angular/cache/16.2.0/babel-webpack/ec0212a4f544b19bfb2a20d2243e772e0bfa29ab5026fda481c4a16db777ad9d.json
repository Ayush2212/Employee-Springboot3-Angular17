{"ast":null,"code":"import { EmployeeService } from \"./employee.service\";\nimport { inject } from \"@angular/core\";\nimport { of } from \"rxjs\";\nexport const EmployeeResolver = (route, state, employeeService = inject(EmployeeService)) => {\n  const employeeId = route.paramMap.get(\"emp_id\");\n  if (employeeId) {\n    // make api call and get data for given employee id\n    return employeeService.getEmployee(Number(employeeId));\n  } else {\n    // create and return empty employee details\n    const employee = {\n      emp_id: 0,\n      employee_name: '',\n      empl_contact_number: '',\n      employee_address: '',\n      employee_gender: '',\n      employee_depart: '',\n      employee_skills: '',\n      salary: 0,\n      hireDate: new Date()\n    };\n    return of(employee);\n  }\n};","map":{"version":3,"names":["EmployeeService","inject","of","EmployeeResolver","route","state","employeeService","employeeId","paramMap","get","getEmployee","Number","employee","emp_id","employee_name","empl_contact_number","employee_address","employee_gender","employee_depart","employee_skills","salary","hireDate","Date"],"sources":["/home/ayush.dwivedee/SpringbootAngular/crud-angular-ui/src/app/employee-resolver.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, ResolveFn, RouterStateSnapshot } from \"@angular/router\";\nimport { EmployeeService } from \"./employee.service\";\nimport { inject } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { Employee } from \"./employee.model\";\n\nexport const EmployeeResolver: ResolveFn<any> = \n    (route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot,\n        employeeService: EmployeeService = inject(EmployeeService)) :Observable<Employee> => {\n\n\n            const employeeId = route.paramMap.get(\"emp_id\");\n\n            if(employeeId) {\n                // make api call and get data for given employee id\n                return employeeService.getEmployee(Number(employeeId));\n            } else {\n                // create and return empty employee details\n\n                const employee: Employee = {\n                    emp_id: 0,\n                    employee_name: '',\n                    empl_contact_number: '',\n                    employee_address: '',\n                    employee_gender: '',\n                    employee_depart: '',\n                    employee_skills: '',\n                    salary: 0,\n                    hireDate: new Date()\n                   \n                }\n\n                return of(employee);\n\n            }\n\n        }"],"mappings":"AACA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAAqBC,EAAE,QAAQ,MAAM;AAGrC,OAAO,MAAMC,gBAAgB,GACzBA,CAACC,KAA6B,EAC1BC,KAA0B,EAC1BC,eAAA,GAAmCL,MAAM,CAACD,eAAe,CAAC,KAA0B;EAGhF,MAAMO,UAAU,GAAGH,KAAK,CAACI,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;EAE/C,IAAGF,UAAU,EAAE;IACX;IACA,OAAOD,eAAe,CAACI,WAAW,CAACC,MAAM,CAACJ,UAAU,CAAC,CAAC;GACzD,MAAM;IACH;IAEA,MAAMK,QAAQ,GAAa;MACvBC,MAAM,EAAE,CAAC;MACTC,aAAa,EAAE,EAAE;MACjBC,mBAAmB,EAAE,EAAE;MACvBC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE,EAAE;MACnBC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,IAAIC,IAAI;KAErB;IAED,OAAOpB,EAAE,CAACU,QAAQ,CAAC;;AAI3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}